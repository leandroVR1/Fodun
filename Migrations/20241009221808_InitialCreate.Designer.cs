// <auto-generated />
using System;
using Fodun.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fodun.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241009221808_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AlojamientoComodidad", b =>
                {
                    b.Property<int>("AlojamientoId")
                        .HasColumnType("int");

                    b.Property<int>("ComodidadesId")
                        .HasColumnType("int");

                    b.HasKey("AlojamientoId", "ComodidadesId");

                    b.HasIndex("ComodidadesId");

                    b.ToTable("AlojamientoComodidad");
                });

            modelBuilder.Entity("Fodun.Models.Alojamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SedeId");

                    b.ToTable("Alojamientos");
                });

            modelBuilder.Entity("Fodun.Models.Comodidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Comodidades");
                });

            modelBuilder.Entity("Fodun.Models.Habitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlojamientoId")
                        .HasColumnType("int");

                    b.Property<int>("Camarotes")
                        .HasColumnType("int");

                    b.Property<int>("CamasDobles")
                        .HasColumnType("int");

                    b.Property<int>("CamasSencillas")
                        .HasColumnType("int");

                    b.Property<int>("CapacidadMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("TieneBanioPrivado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AlojamientoId");

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("Fodun.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlojamientoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NumeroPersonas")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPagar")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlojamientoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Fodun.Models.Sede", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadTotal")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoSede")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sedes");
                });

            modelBuilder.Entity("Fodun.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("Fodun.Models.Tarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlojamientoId")
                        .HasColumnType("int");

                    b.Property<int>("CapacidadMaxima")
                        .HasColumnType("int");

                    b.Property<int>("CapacidadMinima")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PrecioPersonaAdicional")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Temporada")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlojamientoId");

                    b.ToTable("Tarifas");
                });

            modelBuilder.Entity("Fodun.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .HasColumnType("longtext");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NroDocumento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PreguntaClave")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RespuestaClave")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SedeServicio", b =>
                {
                    b.Property<int>("SedeId")
                        .HasColumnType("int");

                    b.Property<int>("ServiciosId")
                        .HasColumnType("int");

                    b.HasKey("SedeId", "ServiciosId");

                    b.HasIndex("ServiciosId");

                    b.ToTable("SedeServicio");
                });

            modelBuilder.Entity("AlojamientoComodidad", b =>
                {
                    b.HasOne("Fodun.Models.Alojamiento", null)
                        .WithMany()
                        .HasForeignKey("AlojamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fodun.Models.Comodidad", null)
                        .WithMany()
                        .HasForeignKey("ComodidadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fodun.Models.Alojamiento", b =>
                {
                    b.HasOne("Fodun.Models.Sede", "Sede")
                        .WithMany("Alojamientos")
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sede");
                });

            modelBuilder.Entity("Fodun.Models.Habitacion", b =>
                {
                    b.HasOne("Fodun.Models.Alojamiento", "Alojamiento")
                        .WithMany("Habitaciones")
                        .HasForeignKey("AlojamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alojamiento");
                });

            modelBuilder.Entity("Fodun.Models.Reserva", b =>
                {
                    b.HasOne("Fodun.Models.Alojamiento", "Alojamiento")
                        .WithMany("Reservas")
                        .HasForeignKey("AlojamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fodun.Models.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alojamiento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Fodun.Models.Tarifa", b =>
                {
                    b.HasOne("Fodun.Models.Alojamiento", "Alojamiento")
                        .WithMany("Tarifas")
                        .HasForeignKey("AlojamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alojamiento");
                });

            modelBuilder.Entity("SedeServicio", b =>
                {
                    b.HasOne("Fodun.Models.Sede", null)
                        .WithMany()
                        .HasForeignKey("SedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fodun.Models.Servicio", null)
                        .WithMany()
                        .HasForeignKey("ServiciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fodun.Models.Alojamiento", b =>
                {
                    b.Navigation("Habitaciones");

                    b.Navigation("Reservas");

                    b.Navigation("Tarifas");
                });

            modelBuilder.Entity("Fodun.Models.Sede", b =>
                {
                    b.Navigation("Alojamientos");
                });

            modelBuilder.Entity("Fodun.Models.Usuario", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
